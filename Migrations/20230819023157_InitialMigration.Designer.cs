// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ordinario;

#nullable disable

namespace Examen.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230819023157_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Ordinario.Models.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaAtencion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaReservada")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MotivoVisita")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreVeterinario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Citas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaAtencion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaReservada = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MotivoVisita = "Consulta",
                            NombreVeterinario = "Alba L",
                            Observaciones = "Perrito sano :)"
                        },
                        new
                        {
                            Id = 2,
                            FechaAtencion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaReservada = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MotivoVisita = "Vacunación",
                            NombreVeterinario = "Alba L",
                            Observaciones = "Perrito vacunado :)"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
